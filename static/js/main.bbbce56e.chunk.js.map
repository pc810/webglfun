{"version":3,"sources":["images/ConcentricCircle.png","images/Grid.png","images/RainbowWaves.png","images/Polygon.png","images/DwlSphere.png","App.js","reportWebVitals.js","index.js"],"names":["ConcentricCircle","React","lazy","Grid","RainbowWaves","Polygon","linkmap","path","Component","name","inspiration","image","DwlSphereImage","ConcentricCircleImage","RainbowWavesImage","PolygonImage","GridImage","App","to","fallback","className","map","c","i","src","alt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8NAAe,MAA0B,6CCA1B,MAA0B,iCCA1B,MAA0B,yCCA1B,MAA0B,oCCA1B,MAA0B,sCCiBnCA,EAAmBC,IAAMC,MAAK,kBAAK,8DACnCC,EAAOF,IAAMC,MAAK,kBAAM,qEACxBE,EAAeH,IAAMC,MAAK,kBAAM,8DAChCG,EAAUJ,IAAMC,MAAK,kBAAM,sEAG3BI,EAAU,CACd,CACEC,KAAM,aACNC,UALcP,IAAMC,MAAK,kBAAM,uDAM/BO,KAAM,aACNC,YAAa,qBACbC,MAAOC,GAET,CACEL,KAAM,oBACNC,UAAWR,EACXS,KAAM,mBACNC,YAAa,0DACbC,MAAOE,GAET,CACEN,KAAM,gBACNC,UAAWJ,EACXK,KAAM,gBACNC,YAAa,6DACbC,MAAOG,GAET,CACEP,KAAM,WACNC,UAAWH,EACXI,KAAM,WACNC,YAAa,KACbC,MAAOI,GAET,CACER,KAAM,QACNC,UAAWL,EACXM,KAAM,OACNC,YAAa,KACbC,MAAOK,IAyCIC,MArCf,WAEE,OACE,mCACE,eAAC,IAAD,WACE,iCACE,cAAC,IAAD,CAAMC,GAAG,QAAT,oBAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAAOX,KAAK,WAAZ,SACE,eAAC,WAAD,CAAUY,SAAU,wCAApB,UACE,qBAAKC,UAAU,UAAf,0BACA,qBAAKA,UAAU,eAAf,SACGd,EAAQe,KAAI,SAACC,EAAGC,GAAJ,OACX,cAAC,IAAD,CAAML,GAAII,EAAEf,KAAZ,SACE,sBAAKa,UAAU,OAAf,UACE,6BAAKE,EAAEb,OACP,qBAAKe,IAAKF,EAAEX,MAAOc,IAAKH,EAAEb,WAHPc,aAU9BjB,EAAQe,KAAI,SAACC,GAAD,OACX,cAAC,IAAD,CAAOf,KAAMe,EAAEf,KAAf,SACE,cAAC,WAAD,CAAUY,SAAU,wCAApB,SACE,cAACG,EAAEd,UAAH,CAAaE,YAAaY,EAAEZ,8BC5E7BgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bbbce56e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ConcentricCircle.625f7169.png\";","export default __webpack_public_path__ + \"static/media/Grid.95a16c9c.png\";","export default __webpack_public_path__ + \"static/media/RainbowWaves.a6adfb6d.png\";","export default __webpack_public_path__ + \"static/media/Polygon.4bd9ca39.png\";","export default __webpack_public_path__ + \"static/media/DwlSphere.debbebda.png\";","import \"./App.css\";\r\nimport React, { Suspense } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n///////////////\r\n////images/////\r\n///////////////\r\n\r\nimport ConcentricCircleImage from './images/ConcentricCircle.png'\r\nimport GridImage from './images/Grid.png'\r\nimport RainbowWavesImage from './images/RainbowWaves.png'\r\nimport PolygonImage from './images/Polygon.png'\r\nimport DwlSphereImage from './images/DwlSphere.png'\r\n///////////////\r\n//components///\r\n///////////////\r\nconst ConcentricCircle = React.lazy(() =>import(\"./components/ConcentricCircle\"));\r\nconst Grid = React.lazy(() => import(\"./components/Grid\"));\r\nconst RainbowWaves = React.lazy(() => import(\"./components/RainbowWaves\"));\r\nconst Polygon = React.lazy(() => import(\"./components/Polygon\"));\r\nconst DwlSphere = React.lazy(() => import(\"./components/DwlSphere\"));\r\n\r\nconst linkmap = [\r\n  {\r\n    path: \"/DwlSphere\",\r\n    Component: DwlSphere,\r\n    name: \"Dwl Sphere\",\r\n    inspiration: \"https://dwl.media/\",\r\n    image: DwlSphereImage,\r\n  },\r\n  {\r\n    path: \"/ConcentricCircle\",\r\n    Component: ConcentricCircle,\r\n    name: \"ConcentricCircle\",\r\n    inspiration: \"https://twitter.com/marioecg/status/1318360618043428870\",\r\n    image: ConcentricCircleImage,\r\n  },\r\n  {\r\n    path: \"/RainbowWaves\",\r\n    Component: RainbowWaves,\r\n    name: \"Rainbow Waves\",\r\n    inspiration: \"https://twitter.com/ilithya_net/status/1319048032126705671\",\r\n    image: RainbowWavesImage,\r\n  },\r\n  {\r\n    path: \"/Polygon\",\r\n    Component: Polygon,\r\n    name: \"Polygons\",\r\n    inspiration: null,\r\n    image: PolygonImage,\r\n  },\r\n  {\r\n    path: \"/Grid\",\r\n    Component: Grid,\r\n    name: \"Grid\",\r\n    inspiration: null,\r\n    image: GridImage,\r\n  },\r\n];\r\n\r\nfunction App() {\r\n  //console.log(location.pathname);\r\n  return (\r\n    <>\r\n      <Router>\r\n        <header>\r\n          <Link to=\"/menu\">menu</Link>\r\n        </header>\r\n        <Switch>\r\n          <Route path=\"/(menu|)\">\r\n            <Suspense fallback={<h1>Loding</h1>}>\r\n              <div className=\"tagline\">WebGL is Fun</div>\r\n              <div className=\"card-wrapper\">\r\n                {linkmap.map((c, i) => (\r\n                  <Link to={c.path} key={i}>\r\n                    <div className=\"card\">\r\n                      <h5>{c.name}</h5>\r\n                      <img src={c.image} alt={c.name} />\r\n                    </div>\r\n                  </Link>\r\n                ))}\r\n              </div>\r\n            </Suspense>\r\n          </Route>\r\n          {linkmap.map((c) => (\r\n            <Route path={c.path}>\r\n              <Suspense fallback={<h1>Loding</h1>}>\r\n                <c.Component inspiration={c.inspiration} />\r\n              </Suspense>\r\n            </Route>\r\n          ))}\r\n        </Switch>\r\n      </Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}