(this.webpackJsonpwebglfun=this.webpackJsonpwebglfun||[]).push([[11],{339:function(t,e,r){"use strict";r.r(e);var i=r(45),a=r(32),o=r(1),n=r(0),s=r.n(n),l=r(31),c=r(38),u=r(105),v=r(63),m=r(83),f=r(30),h=r(64),d=r(112),g={shaderID:"luminosityHighPass",uniforms:{tDiffuse:{value:null},luminosityThreshold:{value:1},smoothWidth:{value:1},defaultColor:{value:new f.Color(0)},defaultOpacity:{value:0}},vertexShader:["varying vec2 vUv;","void main() {","\tvUv = uv;","\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );","}"].join("\n"),fragmentShader:["uniform sampler2D tDiffuse;","uniform vec3 defaultColor;","uniform float defaultOpacity;","uniform float luminosityThreshold;","uniform float smoothWidth;","varying vec2 vUv;","void main() {","\tvec4 texel = texture2D( tDiffuse, vUv );","\tvec3 luma = vec3( 0.299, 0.587, 0.114 );","\tfloat v = dot( texel.xyz, luma );","\tvec4 outputColor = vec4( defaultColor.rgb, defaultOpacity );","\tfloat alpha = smoothstep( luminosityThreshold, luminosityThreshold + smoothWidth, v );","\tgl_FragColor = mix( outputColor, texel, alpha );","}"].join("\n")},p=function(t,e,r,i){h.a.call(this),this.strength=void 0!==e?e:1,this.radius=r,this.threshold=i,this.resolution=void 0!==t?new f.Vector2(t.x,t.y):new f.Vector2(256,256),this.clearColor=new f.Color(0,0,0);var a={minFilter:f.LinearFilter,magFilter:f.LinearFilter,format:f.RGBAFormat};this.renderTargetsHorizontal=[],this.renderTargetsVertical=[],this.nMips=5;var o=Math.round(this.resolution.x/2),n=Math.round(this.resolution.y/2);this.renderTargetBright=new f.WebGLRenderTarget(o,n,a),this.renderTargetBright.texture.name="UnrealBloomPass.bright",this.renderTargetBright.texture.generateMipmaps=!1;for(var s=0;s<this.nMips;s++){var l=new f.WebGLRenderTarget(o,n,a);l.texture.name="UnrealBloomPass.h"+s,l.texture.generateMipmaps=!1,this.renderTargetsHorizontal.push(l);var c=new f.WebGLRenderTarget(o,n,a);c.texture.name="UnrealBloomPass.v"+s,c.texture.generateMipmaps=!1,this.renderTargetsVertical.push(c),o=Math.round(o/2),n=Math.round(n/2)}void 0===g&&console.error("UnrealBloomPass relies on LuminosityHighPassShader");var u=g;this.highPassUniforms=f.UniformsUtils.clone(u.uniforms),this.highPassUniforms.luminosityThreshold.value=i,this.highPassUniforms.smoothWidth.value=.01,this.materialHighPassFilter=new f.ShaderMaterial({uniforms:this.highPassUniforms,vertexShader:u.vertexShader,fragmentShader:u.fragmentShader,defines:{}}),this.separableBlurMaterials=[];var v=[3,5,7,9,11];for(o=Math.round(this.resolution.x/2),n=Math.round(this.resolution.y/2),s=0;s<this.nMips;s++)this.separableBlurMaterials.push(this.getSeperableBlurMaterial(v[s])),this.separableBlurMaterials[s].uniforms.texSize.value=new f.Vector2(o,n),o=Math.round(o/2),n=Math.round(n/2);this.compositeMaterial=this.getCompositeMaterial(this.nMips),this.compositeMaterial.uniforms.blurTexture1.value=this.renderTargetsVertical[0].texture,this.compositeMaterial.uniforms.blurTexture2.value=this.renderTargetsVertical[1].texture,this.compositeMaterial.uniforms.blurTexture3.value=this.renderTargetsVertical[2].texture,this.compositeMaterial.uniforms.blurTexture4.value=this.renderTargetsVertical[3].texture,this.compositeMaterial.uniforms.blurTexture5.value=this.renderTargetsVertical[4].texture,this.compositeMaterial.uniforms.bloomStrength.value=e,this.compositeMaterial.uniforms.bloomRadius.value=.1,this.compositeMaterial.needsUpdate=!0;this.compositeMaterial.uniforms.bloomFactors.value=[1,.8,.6,.4,.2],this.bloomTintColors=[new f.Vector3(1,1,1),new f.Vector3(1,1,1),new f.Vector3(1,1,1),new f.Vector3(1,1,1),new f.Vector3(1,1,1)],this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,void 0===d.a&&console.error("UnrealBloomPass relies on CopyShader");var m=d.a;this.copyUniforms=f.UniformsUtils.clone(m.uniforms),this.copyUniforms.opacity.value=1,this.materialCopy=new f.ShaderMaterial({uniforms:this.copyUniforms,vertexShader:m.vertexShader,fragmentShader:m.fragmentShader,blending:f.AdditiveBlending,depthTest:!1,depthWrite:!1,transparent:!0}),this.enabled=!0,this.needsSwap=!1,this.oldClearColor=new f.Color,this.oldClearAlpha=1,this.basic=new f.MeshBasicMaterial,this.fsQuad=new h.a.FullScreenQuad(null)};p.prototype=Object.assign(Object.create(h.a.prototype),{constructor:p,dispose:function(){for(var t=0;t<this.renderTargetsHorizontal.length;t++)this.renderTargetsHorizontal[t].dispose();for(t=0;t<this.renderTargetsVertical.length;t++)this.renderTargetsVertical[t].dispose();this.renderTargetBright.dispose()},setSize:function(t,e){var r=Math.round(t/2),i=Math.round(e/2);this.renderTargetBright.setSize(r,i);for(var a=0;a<this.nMips;a++)this.renderTargetsHorizontal[a].setSize(r,i),this.renderTargetsVertical[a].setSize(r,i),this.separableBlurMaterials[a].uniforms.texSize.value=new f.Vector2(r,i),r=Math.round(r/2),i=Math.round(i/2)},render:function(t,e,r,i,a){this.oldClearColor.copy(t.getClearColor()),this.oldClearAlpha=t.getClearAlpha();var o=t.autoClear;t.autoClear=!1,t.setClearColor(this.clearColor,0),a&&t.state.buffers.stencil.setTest(!1),this.renderToScreen&&(this.fsQuad.material=this.basic,this.basic.map=r.texture,t.setRenderTarget(null),t.clear(),this.fsQuad.render(t)),this.highPassUniforms.tDiffuse.value=r.texture,this.highPassUniforms.luminosityThreshold.value=this.threshold,this.fsQuad.material=this.materialHighPassFilter,t.setRenderTarget(this.renderTargetBright),t.clear(),this.fsQuad.render(t);for(var n=this.renderTargetBright,s=0;s<this.nMips;s++)this.fsQuad.material=this.separableBlurMaterials[s],this.separableBlurMaterials[s].uniforms.colorTexture.value=n.texture,this.separableBlurMaterials[s].uniforms.direction.value=p.BlurDirectionX,t.setRenderTarget(this.renderTargetsHorizontal[s]),t.clear(),this.fsQuad.render(t),this.separableBlurMaterials[s].uniforms.colorTexture.value=this.renderTargetsHorizontal[s].texture,this.separableBlurMaterials[s].uniforms.direction.value=p.BlurDirectionY,t.setRenderTarget(this.renderTargetsVertical[s]),t.clear(),this.fsQuad.render(t),n=this.renderTargetsVertical[s];this.fsQuad.material=this.compositeMaterial,this.compositeMaterial.uniforms.bloomStrength.value=this.strength,this.compositeMaterial.uniforms.bloomRadius.value=this.radius,this.compositeMaterial.uniforms.bloomTintColors.value=this.bloomTintColors,t.setRenderTarget(this.renderTargetsHorizontal[0]),t.clear(),this.fsQuad.render(t),this.fsQuad.material=this.materialCopy,this.copyUniforms.tDiffuse.value=this.renderTargetsHorizontal[0].texture,a&&t.state.buffers.stencil.setTest(!0),this.renderToScreen?(t.setRenderTarget(null),this.fsQuad.render(t)):(t.setRenderTarget(r),this.fsQuad.render(t)),t.setClearColor(this.oldClearColor,this.oldClearAlpha),t.autoClear=o},getSeperableBlurMaterial:function(t){return new f.ShaderMaterial({defines:{KERNEL_RADIUS:t,SIGMA:t},uniforms:{colorTexture:{value:null},texSize:{value:new f.Vector2(.5,.5)},direction:{value:new f.Vector2(.5,.5)}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"#include <common>\t\t\t\tvarying vec2 vUv;\n\t\t\t\tuniform sampler2D colorTexture;\n\t\t\t\tuniform vec2 texSize;\t\t\t\tuniform vec2 direction;\t\t\t\t\t\t\t\tfloat gaussianPdf(in float x, in float sigma) {\t\t\t\t\treturn 0.39894 * exp( -0.5 * x * x/( sigma * sigma))/sigma;\t\t\t\t}\t\t\t\tvoid main() {\n\t\t\t\t\tvec2 invSize = 1.0 / texSize;\t\t\t\t\tfloat fSigma = float(SIGMA);\t\t\t\t\tfloat weightSum = gaussianPdf(0.0, fSigma);\t\t\t\t\tvec3 diffuseSum = texture2D( colorTexture, vUv).rgb * weightSum;\t\t\t\t\tfor( int i = 1; i < KERNEL_RADIUS; i ++ ) {\t\t\t\t\t\tfloat x = float(i);\t\t\t\t\t\tfloat w = gaussianPdf(x, fSigma);\t\t\t\t\t\tvec2 uvOffset = direction * invSize * x;\t\t\t\t\t\tvec3 sample1 = texture2D( colorTexture, vUv + uvOffset).rgb;\t\t\t\t\t\tvec3 sample2 = texture2D( colorTexture, vUv - uvOffset).rgb;\t\t\t\t\t\tdiffuseSum += (sample1 + sample2) * w;\t\t\t\t\t\tweightSum += 2.0 * w;\t\t\t\t\t}\t\t\t\t\tgl_FragColor = vec4(diffuseSum/weightSum, 1.0);\n\t\t\t\t}"})},getCompositeMaterial:function(t){return new f.ShaderMaterial({defines:{NUM_MIPS:t},uniforms:{blurTexture1:{value:null},blurTexture2:{value:null},blurTexture3:{value:null},blurTexture4:{value:null},blurTexture5:{value:null},dirtTexture:{value:null},bloomStrength:{value:1},bloomFactors:{value:null},bloomTintColors:{value:null},bloomRadius:{value:0}},vertexShader:"varying vec2 vUv;\n\t\t\t\tvoid main() {\n\t\t\t\t\tvUv = uv;\n\t\t\t\t\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n\t\t\t\t}",fragmentShader:"varying vec2 vUv;\t\t\t\tuniform sampler2D blurTexture1;\t\t\t\tuniform sampler2D blurTexture2;\t\t\t\tuniform sampler2D blurTexture3;\t\t\t\tuniform sampler2D blurTexture4;\t\t\t\tuniform sampler2D blurTexture5;\t\t\t\tuniform sampler2D dirtTexture;\t\t\t\tuniform float bloomStrength;\t\t\t\tuniform float bloomRadius;\t\t\t\tuniform float bloomFactors[NUM_MIPS];\t\t\t\tuniform vec3 bloomTintColors[NUM_MIPS];\t\t\t\t\t\t\t\tfloat lerpBloomFactor(const in float factor) { \t\t\t\t\tfloat mirrorFactor = 1.2 - factor;\t\t\t\t\treturn mix(factor, mirrorFactor, bloomRadius);\t\t\t\t}\t\t\t\t\t\t\t\tvoid main() {\t\t\t\t\tgl_FragColor = bloomStrength * ( lerpBloomFactor(bloomFactors[0]) * vec4(bloomTintColors[0], 1.0) * texture2D(blurTexture1, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[1]) * vec4(bloomTintColors[1], 1.0) * texture2D(blurTexture2, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[2]) * vec4(bloomTintColors[2], 1.0) * texture2D(blurTexture3, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[3]) * vec4(bloomTintColors[3], 1.0) * texture2D(blurTexture4, vUv) + \t\t\t\t\t\t\t\t\t\t\t\t\t lerpBloomFactor(bloomFactors[4]) * vec4(bloomTintColors[4], 1.0) * texture2D(blurTexture5, vUv) );\t\t\t\t}"})}}),p.BlurDirectionX=new f.Vector2(1,0),p.BlurDirectionY=new f.Vector2(0,1);var x=r(113);Object(l.e)({EffectComposer:u.a,RenderPass:m.a,ShaderPass:v.a});function b(t){var e=t.children,r=t.multisamping,i=void 0===r?8:r,o=t.renderIndex,c=void 0===o?1:o,u=Object(n.useRef)(),v=Object(l.h)(),m=v.scene,h=v.camera,d=v.gl,g=v.size,p=Object(n.useState)((function(){if(function(){try{var t=document.createElement("canvas");return!(!window.WebGL2RenderingContext||!t.getContext("webgl2"))}catch(e){return!1}}()&&i>0){var t=new f.WebGLMultisampleRenderTarget(g.width,g.height,{format:f.RGBAFormat,encoding:f.sRGBEncoding});return t.samples=8,t}})),b=Object(a.a)(p,1)[0];return Object(n.useEffect)((function(){var t,e;null==(t=u.current)||t.setSize(g.width,g.height),null==(e=u.current)||e.setPixelRatio(d.getPixelRatio())}),[d,g]),Object(l.f)((function(){var t;return null==(t=u.current)?void 0:t.render()}),c),s.a.createElement("effectComposer",{ref:u,args:[d,b]},s.a.createElement("renderPass",{attachArray:"passes",args:[m,h]}),s.a.createElement("shaderPass",{attachArray:"passes",args:[x.a]}),e)}var y=r(50),P=r(34),T=r(36),z=r(41),S=r(42),j=function(t){Object(z.a)(r,t);var e=Object(S.a)(r);function r(){return Object(P.a)(this,r),e.call(this,{uniforms:{time:{type:"f",value:0},tParticle:{type:"t",value:null}},vertexShader:"\nprecision mediump float;\nuniform float time;\nuniform sampler2D tParticle;\nvarying vec2 vUv;\nvarying vec3 vPosition;\n//\tClassic Perlin 3D Noise \n//\tby Stefan Gustavson\n//\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\n\nfloat cnoise(vec3 P){\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod(Pi0, 289.0);\n  Pi1 = mod(Pi1, 289.0);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 / 7.0;\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 / 7.0;\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \n  return 2.2 * n_xyz;\n}\nfloat rand(vec2 co){\n    return fract(sin(dot(co.xy ,vec2(12.9898,78.233))) * 43758.5453);\n}\nvoid main(){    \n  vUv = uv;  \n  vec3 pos = position;  \n  float n = cnoise(pos + time);\n  pos.z = n;\n  vPosition = pos;\n  vec4 mvposition =  modelViewMatrix * vec4(pos, 1.0);\n  gl_PointSize = 50.*(0.05-n) * (1. / -mvposition.z);\n  gl_Position = projectionMatrix * mvposition;\n}",fragmentShader:"\nprecision mediump float;\nuniform float time;\nuniform sampler2D tParticle;\nvarying vec2 vUv;\nvarying vec3 vPosition;\nvoid main(){\n  vec4 particleTexture = texture2D(tParticle, gl_PointCoord);\n  float c = 1. - particleTexture.r;  \n  gl_FragColor = vec4(c,c,c,1.);\n  gl_FragColor.r *= vPosition.x;\n  gl_FragColor.g *= vPosition.y;\n  if(c<0.02)  \n  discard;\n}"})}return Object(T.a)(r,[{key:"time",get:function(){return this.uniforms.time.value},set:function(t){this.uniforms.time.value=t}},{key:"tParticle",get:function(){return this.uniforms.tParticle.value},set:function(t){this.uniforms.tParticle.value=t}}]),r}(f.ShaderMaterial);Object(l.e)({ParticleShaderMaterial:j});r(39);function M(t){var e=t.count,r=t.speed,i=void 0===r?.1:r,a=Object(n.useRef)(null),s=Object(c.c)("images/DistortedParticlePlane/particle_mask.jpg");return Object(l.f)((function(t){a.current.material.time=t.clock.getElapsedTime()*i})),Object(o.jsxs)("points",{ref:a,rotation:[Math.PI/2,0,0],children:[Object(o.jsx)("planeGeometry",{args:[20,20,e,e],attach:"geometry"}),Object(o.jsx)("particleShaderMaterial",{tParticle:s})]})}Object(l.e)({EffectComposer:u.a,ShaderPass:v.a,RenderPass:m.a,UnrealBloomPass:p});e.default=function(t){var e=t.inspiration,r=Object(n.useState)({count:150,speed:.1}),s=Object(a.a)(r,2),u=s[0],v=s[1];return Object(n.useEffect)((function(){return document.title="Distorted Particle Plane",function(){document.title="WebGlfun"}}),[]),Object(o.jsxs)(o.Fragment,{children:[Object(o.jsxs)(l.a,{camera:{position:[2,2.5,2]},children:[Object(o.jsx)("color",{attach:"background",args:["black"]}),Object(o.jsx)(n.Suspense,{fallback:null,children:Object(o.jsx)(M,Object(i.a)({},u))}),Object(o.jsx)(b,{children:Object(o.jsx)("unrealBloomPass",{attachArray:"passes",args:[void 0,1.5,1,0]})}),Object(o.jsx)(c.a,{autoRotate:!0,autoRotateSpeed:.2})]}),e&&Object(o.jsxs)("div",{className:"inspiration",style:{color:"white"},children:["Inspired from ",Object(o.jsx)("a",{href:e,children:"here"})]}),Object(o.jsx)("div",{className:"gui",children:Object(o.jsx)(y.f,{data:u,onUpdate:function(t){v(t)},children:Object(o.jsxs)(y.c,{title:"Play with settings",children:[Object(o.jsx)(y.d,{path:"count",label:"count",min:10,max:500,step:50}),Object(o.jsx)(y.d,{path:"speed",label:"speed ",min:0,max:1,step:.01})]})})})]})}},45:function(t,e,r){"use strict";r.d(e,"a",(function(){return o}));var i=r(44);function a(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);e&&(i=i.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,i)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?a(Object(r),!0).forEach((function(e){Object(i.a)(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}}}]);
//# sourceMappingURL=11.7018ec33.chunk.js.map