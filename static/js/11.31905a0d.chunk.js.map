{"version":3,"sources":["components/Polygon.js"],"names":["PolygonMesh","n","points","material","THREE","color","ref","useUpdate","geometry","setFromPoints","attach","Polygon","inspiration","useState","count","data","setData","setPoints","useEffect","document","title","stepAngle","Math","PI","originY","height","tan","length","tpoints","width","i","prevX","x","prevY","y","a","nextX","cos","nextY","sin","push","gl","antialias","alpha","camera","position","near","far","onCreated","setClearColor","intensity","className","href","onUpdate","newData","path","label","min","max","step"],"mappings":"8KAOA,SAASA,EAAT,GAAoC,EAAbC,EAAc,IAAXC,EAAU,EAAVA,OAClBC,EAAW,IAAIC,oBAAwB,CAC3CC,MAAO,MAEHC,EAAMC,aACV,SAACC,GACCA,EAASC,cAAcP,KAEzB,CAACA,IAEH,OACE,sBAAMC,SAAUA,EAAhB,SACE,gCAAgBO,OAAO,WAAWJ,IAAKA,MA+D9BK,UA3Df,YAAmC,IAAhBC,EAAe,EAAfA,YAAe,EACRC,mBAAS,CAAEC,MAAO,IADV,mBACzBC,EADyB,KACnBC,EADmB,OAKJH,mBAAS,IALL,mBAKzBX,EALyB,KAKjBe,EALiB,KA+BhC,OAzBAC,qBAAU,WAER,OADAC,SAASC,MAAQ,UACV,WACLD,SAASC,MAAQ,cAElB,IACHF,qBAAU,WASR,IARA,IAGMG,EAAa,EAAIC,KAAKC,GAAMR,EAAKD,MAGjCU,EAAUC,EAFU,EAAIH,KAAKI,IAAIL,EAAY,GAAxCM,GAGPC,EAAU,CAAC,IAAIxB,UAFHyB,GAE0BL,EAAS,IAC1CM,EAAI,EAAGA,GAAKf,EAAKD,MAAOgB,IAAK,CACpC,IAAIC,EAAQH,EAAQE,EAAI,GAAGE,EACvBC,EAAQL,EAAQE,EAAI,GAAGI,EACvBC,EAAId,EAAYS,EAChBM,EAAQL,EAVC,EAUgBT,KAAKe,IAAIF,GAClCG,EAAQL,EAXC,EAWgBX,KAAKiB,IAAIJ,GACtCP,EAAQY,KAAK,IAAIpC,UAAcgC,EAAOE,EAAO,IAE/CrB,EAAUW,KACT,CAACb,IAEF,qCACE,eAAC,IAAD,CACE0B,GAAI,CAAEC,WAAW,EAAOC,OAAO,GAC/BC,OAAQ,CAAEC,SAAU,CAAC,EAAG,EAAG,GAAIC,KAAM,KAAOC,IAAK,KACjDC,UAAW,qBAAGP,GAAYQ,cAAc,UAH1C,UAKE,iCACA,4BAAYJ,SAAU,CAAC,IAAK,IAAK,KAAMK,UAAW,MAClD,cAAC,WAAD,UACE,cAAClD,EAAD,CAAaC,EAAGc,EAAKD,MAAOZ,OAAQA,MAEtC,cAAC,IAAD,OAEDU,GACC,sBAAKuC,UAAU,cAAf,2BACgB,mBAAGC,KAAMxC,EAAT,qBAGlB,qBAAKuC,UAAU,MAAf,SACE,cAAC,IAAD,CAAQpC,KAAMA,EAAMsC,SAjDL,SAACC,GACpBtC,EAAQ,CAAEF,MAAOwC,EAAQxC,SAgDrB,SACE,cAAC,IAAD,CAAWyC,KAAK,QAAQC,MAAM,SAASC,IAAK,EAAGC,IAAK,GAAIC,KAAM","file":"static/js/11.31905a0d.chunk.js","sourcesContent":["import React, { Suspense, useEffect, useState } from \"react\";\r\nimport * as THREE from \"three\";\r\nimport { Canvas, useUpdate } from \"react-three-fiber\";\r\nimport { OrbitControls } from \"@react-three/drei\";\r\nimport DatGui, { DatNumber } from \"react-dat-gui\";\r\nimport \"react-dat-gui/dist/index.css\";\r\n\r\nfunction PolygonMesh({ n, points }) {\r\n  const material = new THREE.LineBasicMaterial({\r\n    color: 0x0000ff,\r\n  });\r\n  const ref = useUpdate(\r\n    (geometry) => {\r\n      geometry.setFromPoints(points);\r\n    },\r\n    [points]\r\n  );\r\n  return (\r\n    <line material={material}>\r\n      <bufferGeometry attach=\"geometry\" ref={ref} />\r\n    </line>\r\n  );\r\n}\r\nfunction Polygon({ inspiration }) {\r\n  const [data, setData] = useState({ count: 3 });\r\n  const handleUpdate = (newData) => {\r\n    setData({ count: newData.count });\r\n  };\r\n  const [points, setPoints] = useState([]);\r\n  useEffect(() => {\r\n    document.title = \"Polygon\"    \r\n    return ()=>{\r\n      document.title = \"WebGlfun\"\r\n    }\r\n  }, [])\r\n  useEffect(() => {    \r\n    const width = 0;\r\n    const height = 0;\r\n    const length = 1;\r\n    const stepAngle = (2 * Math.PI) / data.count;\r\n    const t = (length / 2) * (1 / Math.tan(stepAngle / 2));\r\n    const originX = width / 2 + length / 2;\r\n    const originY = height / 2 - t;\r\n    var tpoints = [new THREE.Vector3(originX, originY, 0)];\r\n    for (let i = 1; i <= data.count; i++) {\r\n      var prevX = tpoints[i - 1].x;\r\n      var prevY = tpoints[i - 1].y;\r\n      var a = stepAngle * i;\r\n      var nextX = prevX + length * Math.cos(a);\r\n      var nextY = prevY + length * Math.sin(a);\r\n      tpoints.push(new THREE.Vector3(nextX, nextY, 0));\r\n    }\r\n    setPoints(tpoints);\r\n  }, [data]);\r\n  return (\r\n    <>\r\n      <Canvas\r\n        gl={{ antialias: false, alpha: false }}\r\n        camera={{ position: [0, 0, 2], near: 0.001, far: 1000 }}\r\n        onCreated={({ gl }) => gl.setClearColor(\"white\")}\r\n      >\r\n        <ambientLight />\r\n        <pointLight position={[150, 150, 150]} intensity={0.55} />\r\n        <Suspense>\r\n          <PolygonMesh n={data.count} points={points} />\r\n        </Suspense>\r\n        <OrbitControls />\r\n      </Canvas>\r\n      {inspiration && (\r\n        <div className=\"inspiration\">\r\n          Inspired from <a href={inspiration}>post</a>\r\n        </div>\r\n      )}\r\n      <div className=\"gui\">\r\n        <DatGui data={data} onUpdate={handleUpdate}>\r\n          <DatNumber path=\"count\" label=\"Sides \" min={2} max={50} step={1} />\r\n        </DatGui>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Polygon;\r\n"],"sourceRoot":""}