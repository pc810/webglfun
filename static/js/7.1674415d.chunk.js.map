{"version":3,"sources":["utils/index.js","shaders/DistortedSphere/DistoredSphereMaterial.js","components/DistortedSphere.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js"],"names":["convertHex","hex","replace","r","parseInt","substring","g","b","DistoredSphereMaterial","uniforms","time","type","value","speed","factor","intensity","ramp","color1","THREE","color2","vertexShader","fragmentShader","this","res","extend","DistortedSphereMesh","ref","useRef","viewport","useThree","useFrame","state","current","material","clock","getElapsedTime","s","width","scale","args","Bg","color","max","Math","height","DistortedSphere","inspiration","useState","background","data","setData","useEffect","document","title","gl","antialias","alpha","camera","position","near","far","onCreated","setClearColor","className","style","href","onUpdate","newData","path","label","min","step","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","module","exports","arr","len","arr2","Array","arrayLikeToArray","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test"],"mappings":"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","file":"static/js/7.1674415d.chunk.js","sourcesContent":["export const convertHex = (hex)=>{\r\n  hex = hex.replace(\"#\", \"\");\r\n  let r = parseInt(hex.substring(0, 2), 16);\r\n  let g = parseInt(hex.substring(2, 4), 16);\r\n  let b = parseInt(hex.substring(4, 6), 16);\r\n  return {\r\n    r: r / 256,\r\n    g: g / 256,\r\n    b: b / 256,\r\n  };\r\n};","import * as THREE from \"three\";\r\nimport { extend } from \"react-three-fiber\";\r\nimport {convertHex} from '../../utils/index'\r\nconst fragmentShader = `\r\nuniform float time;\r\nuniform float intensity;\r\nuniform float ramp;\r\nuniform vec3 color1;\r\nuniform vec3 color2;\r\nuniform vec4 resolution;\r\n//important varying\r\nvarying float perlineNoise;\r\n\r\nvarying vec2 vUv;\r\nvarying vec3 vPosition;\r\nfloat pi = 3.141592653589793238;\r\n\r\nvoid main(){    \r\n  vec3 n = vec3(perlineNoise*ramp)*length(vPosition)*20. + 0.4;    \r\n  vec3 gcolor = mix(color1, color2,length(n) - intensity);  \r\n  gl_FragColor = vec4(gcolor, 1.0);  \r\n}\r\n`;\r\nconst vertexShader = `\r\nuniform float time;\r\nuniform float factor;\r\n//imporant varying\r\nvarying vec2 vUv;\r\nvarying float perlineNoise;\r\nvarying vec3 vPosition;\r\nfloat PI = 3.141592653589793238;\r\n//\tClassic Perlin 3D Noise \r\n//\tby Stefan Gustavson\r\n//\r\nvec4 permute(vec4 x){return mod(((x*34.0)+1.0)*x, 289.0);}\r\nvec4 taylorInvSqrt(vec4 r){return 1.79284291400159 - 0.85373472095314 * r;}\r\nvec3 fade(vec3 t) {return t*t*t*(t*(t*6.0-15.0)+10.0);}\r\n\r\nfloat cnoise(vec3 P){\r\n  vec3 Pi0 = floor(P); // Integer part for indexing\r\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\r\n  Pi0 = mod(Pi0, 289.0);\r\n  Pi1 = mod(Pi1, 289.0);\r\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\r\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\r\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\r\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\r\n  vec4 iz0 = Pi0.zzzz;\r\n  vec4 iz1 = Pi1.zzzz;\r\n\r\n  vec4 ixy = permute(permute(ix) + iy);\r\n  vec4 ixy0 = permute(ixy + iz0);\r\n  vec4 ixy1 = permute(ixy + iz1);\r\n\r\n  vec4 gx0 = ixy0 / 7.0;\r\n  vec4 gy0 = fract(floor(gx0) / 7.0) - 0.5;\r\n  gx0 = fract(gx0);\r\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\r\n  vec4 sz0 = step(gz0, vec4(0.0));\r\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\r\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\r\n\r\n  vec4 gx1 = ixy1 / 7.0;\r\n  vec4 gy1 = fract(floor(gx1) / 7.0) - 0.5;\r\n  gx1 = fract(gx1);\r\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\r\n  vec4 sz1 = step(gz1, vec4(0.0));\r\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\r\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\r\n\r\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\r\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\r\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\r\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\r\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\r\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\r\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\r\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\r\n\r\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\r\n  g000 *= norm0.x;\r\n  g010 *= norm0.y;\r\n  g100 *= norm0.z;\r\n  g110 *= norm0.w;\r\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\r\n  g001 *= norm1.x;\r\n  g011 *= norm1.y;\r\n  g101 *= norm1.z;\r\n  g111 *= norm1.w;\r\n\r\n  float n000 = dot(g000, Pf0);\r\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\r\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\r\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\r\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\r\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\r\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\r\n  float n111 = dot(g111, Pf1);\r\n\r\n  vec3 fade_xyz = fade(Pf0);\r\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\r\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\r\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x); \r\n  return 2.2 * n_xyz;\r\n}\r\nvoid main(){\r\n  // vUv = (uv-vec2(0.5))*(0.9 - 0.15 * distanceFromCenter)+vec2(0.5);\r\n  vUv = uv;\r\n  vec3 pos = position;    \r\n  vec3 newN =  position*6. + time /20.;  \r\n  vPosition = pos;\r\n  float n = cnoise(newN*1.5);\r\n  n*=factor;\r\n  pos *= (n+1.);  \r\n  perlineNoise = n;  \r\n  \r\n \tgl_Position = projectionMatrix * modelViewMatrix * vec4(pos, 1.0);\r\n}\r\n`;\r\nclass DistoredSphereMaterial extends THREE.ShaderMaterial {\r\n  constructor() {\r\n    super({\r\n      uniforms: {\r\n        time: { type: \"f\", value: 0 },\r\n        speed: { type: \"f\", value: 5 },\r\n        factor: { type: \"f\", value: 0.2 },\r\n        intensity: { type: \"f\", value: 0.25 },\r\n        ramp: { type: \"f\", value: 0.5 },\r\n        color1: { type: \"v3\", value: new THREE.Vector3(0.0549, 0.9373, 1.0) },\r\n        color2: { type: \"v3\", value: new THREE.Vector3(1.0, 0.0549, 0.9529) },\r\n      },\r\n      vertexShader: vertexShader,\r\n      fragmentShader: fragmentShader,\r\n    });\r\n  }\r\n\r\n  get time() {\r\n    return this.uniforms.time.value;\r\n  }\r\n  get factor() {\r\n    return this.uniforms.factor.value;\r\n  }\r\n  get speed() {    \r\n    return this.uniforms.speed.value;\r\n  }\r\n  get intensity() {\r\n    return this.uniforms.intensity.value;\r\n  }\r\n  get ramp() {\r\n    return this.uniforms.ramp.value;\r\n  }\r\n  set time(time) {    \r\n    this.uniforms.time.value = time * this.uniforms.speed.value;\r\n  }\r\n  set factor(factor) {\r\n    this.uniforms.factor.value = factor;\r\n  }\r\n  set speed(speed) {\r\n    this.uniforms.speed.value = speed;\r\n  }\r\n  set ramp(ramp) {\r\n    this.uniforms.ramp.value = ramp;\r\n  }\r\n  set intensity(intensity) {\r\n    this.uniforms.intensity.value = intensity;\r\n  }\r\n  set color1(hex) {\r\n    let res = convertHex(hex);\r\n    this.uniforms.color1.value = new THREE.Vector3(res.r, res.g, res.b);\r\n  }\r\n  set color2(hex) {\r\n    let res = convertHex(hex);\r\n    this.uniforms.color2.value = new THREE.Vector3(res.r, res.g, res.b);\r\n  }  \r\n}\r\n\r\nextend({ DistoredSphereMaterial });\r\n","import React, { Suspense, useEffect, useRef, useState } from \"react\";\r\nimport { Canvas, useFrame, useThree } from \"react-three-fiber\";\r\nimport DatGui, { DatNumber, DatColor, DatFolder } from \"react-dat-gui\";\r\nimport \"../shaders/DistortedSphere/DistoredSphereMaterial\";\r\nimport \"react-dat-gui/dist/index.css\";\r\n\r\nfunction DistortedSphereMesh({\r\n  factor,\r\n  speed,\r\n  intensity,\r\n  ramp,\r\n  color1,\r\n  color2,\r\n}) {\r\n  const ref = useRef();\r\n  const { viewport } = useThree();  \r\n  useFrame((state) => {\r\n    ref.current.material.time = state.clock.getElapsedTime();\r\n    ref.current.material.factor = factor;\r\n    ref.current.material.speed = speed;\r\n    ref.current.material.ramp = ramp;\r\n    ref.current.material.intensity = intensity;\r\n    ref.current.material.color1 = color1;\r\n    ref.current.material.color2 = color2;\r\n  });\r\n  let s = 0.5 + viewport.width / 6;  \r\n  return (\r\n    <mesh ref={ref} scale={[s, s, s]}>\r\n      <sphereGeometry args={[0.5, 256, 128]} />\r\n      <distoredSphereMaterial />\r\n    </mesh>\r\n  );\r\n}\r\nfunction Bg({ color }) {\r\n  const { viewport } = useThree();\r\n  const max = Math.max(viewport.width, viewport.height);\r\n  return (\r\n    <mesh scale={[max, max, 1]}>\r\n      <planeBufferGeometry />\r\n      <meshBasicMaterial color={color} />\r\n    </mesh>\r\n  );\r\n}\r\nfunction DistortedSphere({ inspiration }) {\r\n  const [data, setData] = useState({\r\n    factor: 0.2,\r\n    speed: 5,\r\n    intensity: 0.25,\r\n    ramp: 0.5,\r\n    color1: \"#0defff\",\r\n    color2: \"#ff0df2\",\r\n    background: \"#000000\",\r\n  });\r\n  const handleUpdate = (newData) => {    \r\n    setData(newData);\r\n  };\r\n  useEffect(() => {\r\n    document.title = \"Distorted Sphere\";\r\n    return () => {\r\n      document.title = \"WebGlfun\";\r\n    };\r\n  }, []);\r\n  // useFrame((state) => (ref.current.time = state.clock.getElapsedTime()));\r\n  return (\r\n    <>\r\n      <Canvas\r\n        gl={{ antialias: false, alpha: false }}\r\n        camera={{ position: [0, 0, 1.5], near: 0.001, far: 1000 }}\r\n        onCreated={({ gl }) => gl.setClearColor(data.background)}\r\n      >\r\n        {/* <ambientLight />\r\n        <pointLight position={[150, 150, 150]} intensity={0.55} /> */}\r\n        {/* <mesh>\r\n          <sphereGeometry args={[0.5, 256, 128]} />\r\n          <distoredSphereMaterial ref={ref} />\r\n        </mesh> */}\r\n        <Suspense>\r\n          <DistortedSphereMesh {...data} />\r\n          <Bg color={data.background} />\r\n        </Suspense>\r\n        {/* <OrbitControls /> */}\r\n      </Canvas>\r\n      {inspiration && (\r\n        <div className=\"inspiration\" style={{color:'white'}}>\r\n          Inspired from <a href={inspiration}>here</a>\r\n        </div>\r\n      )}\r\n      <div className=\"gui\">\r\n        <DatGui data={data} onUpdate={handleUpdate}>\r\n          <DatFolder title=\"Play with settings\">\r\n            <DatNumber\r\n              path=\"factor\"\r\n              label=\"factor \"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n            />\r\n            <DatNumber\r\n              path=\"intensity\"\r\n              label=\"intensity \"\r\n              min={0}\r\n              max={1}\r\n              step={0.01}\r\n            />\r\n            <DatNumber path=\"speed\" label=\"speed\" min={0} max={100} step={1} />\r\n            <DatNumber path=\"ramp\" label=\"ramp \" min={-5} max={5} step={0.01} />\r\n            <DatColor path=\"color1\" label=\"color1\" />\r\n            <DatColor path=\"color2\" label=\"color2\" />\r\n            <DatColor path=\"background\" label=\"background\" />\r\n          </DatFolder>\r\n        </DatGui>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default DistortedSphere;\r\n","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;"],"sourceRoot":""}